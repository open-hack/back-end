swagger: "2.0"
info:
  description: "This is an example of Weebase backend API. Weebase is a tool that allows interaction between hackathon participants and assists sponsors in targeted marketing."
  version: "1.0.0"
  x-logo:
      url: 'logo.png'
  title: "Weebase API"
host: "weebase-test.herokuapp.com"


basePath: "/"
tags:
- name: "chat"
  description: "broadcast a mensage"
- name: "user"
  description: "information about users"
- name: "hackathon"
  description: "information about hackathons"
- name: "subscription"
  description: "information about subscriptions"
- name: "hackathonUser"
  description: "information about the relation between hackathons and hackathoners"

schemes:
- "https"
paths:
  /ws:
    post:
      tags:
      - "chat"
      summary: "Sends message as broadcast to the application chat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "message object to be added"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        200:
          description: "Success"
        403:
          description: "not allowed"
  /api/user/{id}:
    get:
      tags:
      - "user"
      summary: "Searches an User"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://weebase-test.herokuapp.com/api/user/22 \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://weebase-test.herokuapp.com/api/user/22\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://weebase-test.herokuapp.com/api/user/22\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/User'
        500:
          description: "User not found"
  /api/user/all:
    get:
      tags:
      - "user"
      summary: "Gets all Users"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://weebase-test.herokuapp.com/api/user/all \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://weebase-test.herokuapp.com/api/user/all\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://weebase-test.herokuapp.com/api/user/all\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/User'
        500:
          description: "User not found"
  /api/user:
    post:
      tags:
      - "user"
      summary: "Adds a new User"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object to be added"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Success"
        500:
          description: "not allowed"
  /api/login/{email}:
    post:
      tags:
      - "user"
      summary: "Login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        description: "User Email"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        403:
          description: "not allowed"
  /api/hackathon/{id}:
    get:
      tags:
      - "hackathon"
      summary: "Searches a Hackathon"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://weebase-test.herokuapp.com/api/hackathon/22 \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://weebase-test.herokuapp.com/api/hackathon/22\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://weebase-test.herokuapp.com/api/hackathon/22\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Hackathon ID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/Hackathon'
        500:
          description: "Hackathon not found"
  /api/hackathon/all:
    get:
      tags:
      - "hackathon"
      summary: "Gets all Hackathons"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://weebase-test.herokuapp.com/api/hackathon/all \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://weebase-test.herokuapp.com/api/hackathon/all\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://weebase-test.herokuapp.com/api/hackathon/all\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/Hackathon'
        500:
          description: "Hackathon not found"
  /api/hackathon:
    post:
      tags:
      - "hackathon"
      summary: "Adds a new Hackathon"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Hackathon object to be added"
        required: true
        schema:
          $ref: "#/definitions/Hackathon"
      responses:
        200:
          description: "Success"
        403:
          description: "not allowed"
  /api/hackathonUser/user/{id}:
    post:
      tags:
      - "hackathonUser"
      summary: "Relates Hackathons to a user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Hackathon IDs"
        required: true
        schema:
          $ref: "#/definitions/IDList"
      responses:
        200:
          description: "Success"
        403:
          description: "not allowed"
  /api/hackathonUser/hackathon/{id}:
    post:
      tags:
      - "hackathonUser"
      summary: "Relates Users to a Hackathon"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Hackathon ID"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "User IDs"
        required: true
        schema:
          $ref: "#/definitions/IDList"
      responses:
        200:
          description: "Success"
        403:
          description: "not allowed"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      profileImage:
        type: "byte[]"
      username:
        type: "string"
      name:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
      minibio:
        type: "string"
      linkedinUrl:
        type: "string"
      githubUrl:
        type: "string"
      facebookUrl:
        type: "string"
      behanceUrl:
        type: "string"
      dribbbleUrl:
        type: "string"
      instagramUrl:
        type: "string"
      twitterUrl:
        type: "string"
      profile:
        type: "string"
      createdOn:
        type: "string"
        format: "date-time"
      lastLogin:
        type: "string"
        format: "date-time"
  Hackathon:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      image:
        type: "byte[]"
      title:
        type: "string"
      onboarding:
        type: "string"
      hackathonState:
        type: "string"
  Message:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int64"
      text:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      user: 
        type: "object"
  IDList:
    type: "array"
    items:
      type: "integer"
externalDocs:
  description: "Know more"
  url: "https://github.com/open-hack"