swagger: "2.0"
info:
  description: "This is an example of Weebase backend API. Weebase is a tool that allows interaction between hackathon participants and assists sponsors in targeted marketing."
  version: "1.0.0"
  title: "Weebase API"
host: "weebase-test.herokuapp.com"


basePath: "/"
tags:
- name: "ws"
  deion: "Realiza broadcast de mensagem"
- name: "user"
  deion: "Informações sobre Usuários"
- name: "hackathon"
  deion: "Informações sobre Hackathons"
- name: "subscription"
  deion: "Informações sobre Inscrições"
- name: "hackathonUser"
  deion: "Informações sobre a relação entre hackathons e hackathoners"

schemes:
- "https"
paths:
  /api/user/{id}:
    get:
      tags:
      - "user"
      summary: "Pesquisa um Usuário"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://open-hack-shawee.herokuapp.com/api/user/22 \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://open-hack-shawee.herokuapp.com/api/user/22\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://open-hack-shawee.herokuapp.com/api/user/22\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Usuário"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          schema: "#/definitions/User"
          deion: "Success"
        500:
          deion: "Player not found"
  /api/user/all:
    get:
      tags:
      - "user"
      summary: "Obtém todos os usuários"
      x-code-samples:
                  - lang: "curl"
                    source: "curl -X GET \
                               https://open-hack-shawee.herokuapp.com/api/user/all \
                               -H 'Cache-Control: no-cache' \
                               -H 'Postman-Token: c2d587d9-5fca-4adf-bd6f-9ae76d1abca6'"
                  - lang: "java"
                    source: "OkHttpClient client = new OkHttpClient();
                             Request request = new Request.Builder()
                               .url(\"https://open-hack-shawee.herokuapp.com/api/user/all\")
                               .get()
                               .addHeader(\"Cache-Control\", \"no-cache\")
                               .build();
                             Response response = client.newCall(request).execute();"
                  - lang: "python"
                    source: "import requests
                             url = \"https://open-hack-shawee.herokuapp.com/api/user/all\"
                             headers = {
                                 'Cache-Control': \"no-cache\",
                                 'Postman-Token': \"1c7a70b0-149a-4116-b876-1089c0a4dd1f\"
                                 }
                             response = requests.request(\"GET\", url, headers=headers)
                             print(response.text)"
      produces:
      - "application/json"
      responses:
        200:
          schema: "#/definitions/User"
          deion: "Success"
        500:
          deion: "Player not found"
  /api/user:
    post:
      tags:
      - "user"
      summary: "Adiciona um novo Usuário"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        deion: "Objeto do Usuário para ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          deion: "Success"
        403:
          deion: "not allowed"
  /shot/{id}:
    get:
      tags:
      - "shot"
      summary: "Pesquisa um Lance"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Jogador"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Player not found"
  /shot:
    post:
      tags:
      - "shot"
      summary: "Adiciona um novo Lance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Lance"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        deion: "Objeto do Lance para ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Shot"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Shot not found"
  /team/{id}:
    get:
      tags:
      - "team"
      summary: "Pesquisa um Time"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Time"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Team not found"
  /team:
    post:
      tags:
      - "team"
      summary: "Adiciona um novo Time"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Time"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        deion: "Objeto do Time para ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Team"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Time not found"
  /scouts/{id}:
    get:
      tags:
      - "scouts"
      summary: "Pesquisa uma Vigia do Jogo"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID do Vigia do Jogo"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Scouts not found"
  /scouts:
    post:
      tags:
      - "scouts"
      summary: "Adiciona uma nova Vigia do Jogo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        deion: "ID da Vigia do Jogo"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        deion: "Objeto da Vigia do Jogo para ser adicionado"
        required: true
        schema:
          $ref: "#/definitions/Scouts"
      responses:
        200:
          deion: "Success"
        500:
          deion: "Time not found"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      profileImage:
        type: "byte[]"
      username:
        type: "string"
      name:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
      minibio:
        type: "string"
      linkedinUrl:
        type: "string"
      githubUrl:
        type: "string"
      facebookUrl:
        type: "string"
      behanceUrl:
        type: "string"
      dribbbleUrl:
        type: "string"
      instagramUrl:
        type: "string"
      twitterUrl:
        type: "string"
      profile:
        type: "string"
      createdOn:
        type: "string"
        format: "date-time"
      lastLogin:
        type: "string"
        format: "date-time"
  Scouts:
    type: "object"
    properties:
      atleta:
        type: "integer"
        format: "int64"
      rodada:
        type: "integer"
        format: "int64"
      clube:
        type: "integer"
        format: "int64"
      participou:
        type: "integer"
        format: "int64"
      posicao:
        type: "integer"
        format: "int64"
      jogos:
        type: "integer"
        format: "int64"
      pontos:
        type: "integer"
        format: "int64"
      pontos_media:
        type: "integer"
        format: "int64"
      preco:
        type: "integer"
        format: "int64"
      preco_variacao:
        type: "integer"
        format: "int64"
      partida:
        type: "integer"
        format: "int64"
      mando:
        type: "integer"
        format: "int64"
      titular:
        type: "integer"
        format: "int64"
      substituido:
        type: "integer"
        format: "int64"
      tempoJogado:
        type: "integer"
        format: "int64"
      nota:
        type: "integer"
        format: "int64"
      fs:
        type: "integer"
        format: "int64"
      pe:
        type: "integer"
        format: "int64"
      a:
        type: "integer"
        format: "int64"
      ft:
        type: "integer"
        format: "int64"
      fd:
        type: "integer"
        format: "int64"
      ff:
        type: "integer"
        format: "int64"
      g:
        type: "integer"
        format: "int64"
      i:
        type: "integer"
        format: "int64"
      pp:
        type: "integer"
        format: "int64"
      rb:
        type: "integer"
        format: "int64"
      fc:
        type: "integer"
        format: "int64"
      gc:
        type: "integer"
        format: "int64"
      ca:
        type: "integer"
        format: "int64"
      cv:
        type: "integer"
        format: "int64"
      sg:
        type: "integer"
        format: "int64"
      dd:
        type: "integer"
        format: "int64"
      dp:
        type: "integer"
        format: "int64"
      gs:
        type: "integer"
        format: "int64"
    xml:
      name: "Scouts"
  Shot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      partida_id:
        type: "integer"
        format: "int64"
      clube_id:
        type: "integer"
        format: "int64"
      atleta_id:
        type: "integer"
        format: "int64"
      periodo:
        type: "string"
      momento:
        type: "string"
      tipo:
        type: "string"
  Team:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nome:
        type: "string"
      abreviacao:
        type: "string"
      slug:
        type: "string"
externalDocs:
  deion: "Saiba mais"
  url: "https://github.com/open-hack"